;;
;; Header files for Insurance
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $InternalScam$_load
(slice, ((int, int, int))) $InternalScam$_load(slice sc_0) inline;

;; $InternalNewPer$_store
builder $InternalNewPer$_store(builder build_0, (int, int) v) inline;

;; $InternalNewPer$_store_cell
cell $InternalNewPer$_store_cell((int, int) v) inline;

;; $InternalPay$_load
(slice, ((int, slice))) $InternalPay$_load(slice sc_0) inline;

;; $GratzWithdrawAll$_load
(slice, ((int))) $GratzWithdrawAll$_load(slice sc_0) inline;

;; $Insurance$_store
builder $Insurance$_store(builder build_0, (slice, int, int, int, int, int) v) inline;

;; $Insurance$_load
(slice, ((slice, int, int, int, int, int))) $Insurance$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Context$_get_value
_ $Context$_get_value((int, slice, int, slice) v) inline;

;; $InsuranceData$_to_external
(slice, int, int, int, int, int) $InsuranceData$_to_external(((slice, int, int, int, int, int)) v) inline;

;; $Insurance$init$_load
(slice, ((slice))) $Insurance$init$_load(slice sc_0) inline;

;; $Insurance$_contract_init
(slice, int, int, int, int, int) $Insurance$_contract_init(slice $collection) impure inline_ref;

;; $Insurance$_contract_load
(slice, int, int, int, int, int) $Insurance$_contract_load() impure inline_ref;

;; $Insurance$_contract_store
() $Insurance$_contract_store((slice, int, int, int, int, int) v) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $SendParameters$_constructor_to_bounce_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_bounce_value_mode_body(slice to, int bounce, int value, int mode, cell body) inline;

;; $Insurance$_fun_gratz
((slice, int, int, int, int, int), ()) $Insurance$_fun_gratz((slice, int, int, int, int, int) $self) impure inline_ref;

;; $Insurance$_fun_per_to_break_now
((slice, int, int, int, int, int), int) $Insurance$_fun_per_to_break_now((slice, int, int, int, int, int) $self) impure inline_ref;

;; $Insurance$_fun_time_left
((slice, int, int, int, int, int), int) $Insurance$_fun_time_left((slice, int, int, int, int, int) $self) impure inline_ref;

;; $InsuranceData$_constructor_timestamp_end_nft_collection_per_to_break_scam_frozen_coins_count_pays
((slice, int, int, int, int, int)) $InsuranceData$_constructor_timestamp_end_nft_collection_per_to_break_scam_frozen_coins_count_pays(int timestamp_end, slice nft_collection, int per_to_break, int scam, int frozen_coins, int count_pays) inline;

;; $Insurance$_fun_insurance_data
((slice, int, int, int, int, int), (slice, int, int, int, int, int)) $Insurance$_fun_insurance_data((slice, int, int, int, int, int) $self) impure inline_ref;

;; $Insurance$_fun_balance
((slice, int, int, int, int, int), int) $Insurance$_fun_balance((slice, int, int, int, int, int) $self) impure inline_ref;

;; $Insurance$_fun_forward
((slice, int, int, int, int, int), ()) $Insurance$_fun_forward((slice, int, int, int, int, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $Insurance$_fun_notify
((slice, int, int, int, int, int), ()) $Insurance$_fun_notify((slice, int, int, int, int, int) $self, cell $body) impure inline;

;; $InternalNewPer$_constructor_query_id_new_per_to_break
((int, int)) $InternalNewPer$_constructor_query_id_new_per_to_break(int query_id, int new_per_to_break) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
